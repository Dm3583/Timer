{"version":3,"sources":["App.js","index.js"],"names":["TIMER_STATUS","App","useState","seconds","setSeconds","status","setStatus","waitBtn","useRef","useEffect","subscription","interval","subscribe","sec","unsubscribe","click","fromEvent","current","pipe","buffer","debounceTime","map","clicks","length","filter","clicksLength","_","className","Date","toISOString","slice","type","onClick","id","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAKMA,EACG,QADHA,EAEE,OAFFA,EAGE,OAsFOC,EAnFH,WAEV,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAASF,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAUC,iBAAO,SAGvBC,qBAAU,WAER,IACMC,EADQC,YAAS,KACIC,WAAU,WAE5BP,IAASL,GACVI,GAAW,SAAAS,GAAG,OAAEA,EAAI,UAI1B,OAAO,kBAAKH,EAAaI,iBAE7B,CAACT,IAmBCI,qBAAU,WACR,IAAMM,EAAQC,YAAUT,EAAQU,QAAS,SAOnCP,EANcK,EACnBG,KACCC,YAAOJ,EAAMG,KAAKE,YAAa,OAC/BC,aAAI,SAAAC,GAAM,OAAIA,EAAOC,UACrBC,aAAO,SAAAC,GAAY,OAAqB,IAAjBA,MAEQb,WAAU,SAAAc,GACzCpB,EAAUN,MAGZ,OAAO,kBAAMU,EAAaI,iBAC1B,IAWJ,OACE,sBAAKa,UAAU,MAAf,UACE,4BACK,IAAIC,KAAKzB,GAAS0B,cAAcC,MAAM,GAAG,MAE9C,sBAAKH,UAAU,WAAf,UACE,wBAAQI,KAAK,SAASC,QA7CF,WACnB3B,IAAWL,GAAmBK,IAAWL,EAC5CM,EAAUN,IAGVM,EAAUN,GACVI,EAAW,KAuCT,SACGC,IAAWL,EAAqB,QAAU,SAE7C,wBAAQiC,GAAG,OAAOC,IAAK3B,EAASwB,KAAK,SAArC,kBAGA,wBAAQA,KAAK,SAASC,QAnBN,WACf3B,IAAWL,GAAmBG,EAAQ,GACvCG,EAAUN,GAEZI,EAAW,IAeT,0BChFR+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6fa1d3d7.chunk.js","sourcesContent":["import react, { useState, useEffect, useRef,createRef } from 'react';\r\nimport { interval, fromEvent } from 'rxjs';\r\nimport { map, buffer, filter, debounceTime } from 'rxjs/operators';\r\nimport './App.css';\r\n\r\nconst TIMER_STATUS = {\r\n  START: 'start',\r\n  STOP: 'stop',\r\n  WAIT: 'wait'\r\n};\r\n\r\nconst App = () => {\r\n\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [status, setStatus] = useState(TIMER_STATUS.STOP);\r\n\r\n  const waitBtn = useRef('#wait');\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n    const timer = interval(1000);\r\n    const subscription = timer.subscribe(()=>\r\n      {\r\n          if(status===TIMER_STATUS.START){\r\n            setSeconds(sec=>sec+1000);\r\n        };\r\n      }\r\n    );\r\n      return ()=> subscription.unsubscribe();\r\n  },\r\n  [status]);\r\n\r\n  //запуск / остановка отсчета времени,\r\n  //останавливает и обнуляет значение таймера.\r\n    const handleStartStop = () => {\r\n      if(status === TIMER_STATUS.STOP||status === TIMER_STATUS.WAIT){\r\n      setStatus(TIMER_STATUS.START);\r\n\r\n      }else{\r\n      setStatus(TIMER_STATUS.STOP);\r\n      setSeconds(0);\r\n      }\r\n    };\r\n\r\n  //работает на двойной клик\r\n  //(время между нажатиями не более 300 мс!)\r\n  //таймер должен прекратить отсчет времени;\r\n  //если после него нажать старт, то возобновляется отсчет.\r\n \r\n    useEffect(()=>{\r\n      const click = fromEvent(waitBtn.current, 'click');\r\n      const doubleClick = click\r\n      .pipe(\r\n        buffer(click.pipe(debounceTime(300))),\r\n        map(clicks => clicks.length),\r\n        filter(clicksLength => clicksLength === 2)\r\n      );\r\n      const subscription = doubleClick.subscribe(_ => {\r\n        setStatus(TIMER_STATUS.WAIT);    \r\n      });\r\n      \r\n      return () => subscription.unsubscribe();\r\n    },[]);\r\n\r\n  // сброс секундомера  на 0.\r\n  //Обнуляет секундомер и снова начинает отсчет.\r\n    const handleReset = () => {\r\n      if(status === TIMER_STATUS.WAIT&&seconds>0){\r\n        setStatus(TIMER_STATUS.START);\r\n      }\r\n      setSeconds(0);\r\n    };\r\n \r\n  return (\r\n    <div className=\"App\" >\r\n      <p>\r\n          {new Date(seconds).toISOString().slice(11,19)}\r\n      </p>\r\n      <div className=\"Controls\">\r\n        <button type=\"button\" onClick={handleStartStop}>\r\n          {status !== TIMER_STATUS.START ? \"Start\" : \"Stop\"}\r\n        </button>\r\n        <button id=\"wait\" ref={waitBtn} type=\"button\" >\r\n          Wait\r\n        </button>\r\n        <button type=\"button\" onClick={handleReset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}